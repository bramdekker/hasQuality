plugins {
    id 'application'
    id 'java'
    id 'checkstyle'
    id 'antlr'
}

group 'com.bramdekker'
version '1.0-SNAPSHOT'

mainClassName = 'com.bramdekker.main.Main'

sourceCompatibility = 17
targetCompatibility = 17

configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java.srcDirs += "${project.buildDir}/generated-src"
    }
}


jar {
    manifest {
        attributes(
                'Main-Class': 'com.bramdekker.main.Main'
        )
    }
}

dependencies {
    antlr "org.antlr:antlr4:4.10.1"
    implementation 'org.antlr:antlr4:4.10.1'
    implementation group: 'org.jgrapht', name: 'jgrapht-core', version: '1.5.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion '10.2'
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/checkstyle/suppressions.xml").absolutePath
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source='src/test/java'
}

generateGrammarSource {
    doFirst {
        copy {
            from "src/main/antlr/HaskellBaseLexer.java"
            into "${project.buildDir}/generated-src/antlr"
        }
    }

    arguments += ["-package", "antlr", "-visitor"]
    maxHeapSize = "64m"
    outputDirectory = new File("${project.buildDir}/generated-src/antlr".toString())
}